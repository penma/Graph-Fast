#!/usr/bin/perl
use strict;
use warnings;

use Fastgraph;
use Time::HiRes qw(time);

sub td_start {
	$main::x____time = time();
}

sub td_end {
	my $diff = time() - $main::x____time;
	return sprintf("%.3f seconds", $diff);
}

$| = 1;

my $g = new Fastgraph;

sub randnode() { return chr(ord("A") + int(rand(3))) . chr(ord("A") + int(rand(26))) . chr(ord("A") + int(rand(26))); }

foreach ("AAA".."CZZ") {
	$g->add_weighted_edge($_, "center", 9_999_999);
	$g->add_weighted_edge("center", $_, 9_999_999);
}

srand(4789184);
for (1..2_000) {
	printf STDERR ("%5.1f%%\r", 100 * $_ / 2_000) unless ($_ % 243);
	my @n = (randnode, randnode, randnode, randnode, randnode);
	for (my $i = 0; $i < scalar(@n) - 1; $i++) {
		$g->add_weighted_edge($n[$i], $n[$i + 1], 1);
	}
}
print STDERR "\n";

printf STDERR ("%d vertices, %d edges\n", $g->countvertices(), $g->countedges());

td_start();
print join(" . ", $g->SP_Dijkstra("AAA", "BZF")) . "\n";
print "took " . td_end() . "\n";

